import { readFileSync, writeFileSync, mkdirSync } from 'node:fs';
import { dirname, join } from 'node:path';
import { fileURLToPath } from 'node:url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
const projectRoot = dirname(__dirname);

const pkgPath = join(projectRoot, 'package.json');
const outDir = join(projectRoot, 'src');
const outFile = join(outDir, 'version.ts');

const pkg = JSON.parse(readFileSync(pkgPath, 'utf8'));
let version;
if (typeof pkg.version === 'string' && pkg.version !== '') {
  version = pkg.version;
} else {
  console.warn(
    "Warning: package.json is missing a valid 'version' field. Falling back to '0.0.0'.",
  );
  version = '0.0.0';
}

const banner =
  '/* This file is auto-generated by scripts/generate-version.mjs. Do not edit manually. */\n';
const content = `${banner}export const VERSION = '${version}';\n`;

mkdirSync(outDir, { recursive: true });
writeFileSync(outFile, content, 'utf8');
